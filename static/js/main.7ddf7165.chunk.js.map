{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","type","classNames","id","onClick","title","find","content","tabsFromServer","App","state","setState","selectedTabTitle","selectTab","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAUaA,EAAwB,SAAC,GAAD,MACnCC,EADmC,EACnCA,KACAC,EAFmC,EAEnCA,cACAC,EAHmC,EAGnCA,cAHmC,OAKnC,qCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,6BACE,wBACEC,KAAK,SACLH,UAAWI,IAAW,kBAAmB,CACvC,UAAWN,IAAkBI,EAAIG,KAEnCC,QAAS,kBAAMP,EAAcG,IAL/B,SAOGA,EAAIK,SARAL,EAAIG,WAcnB,mBAAGL,UAAU,WAAb,mBACGH,EAAKW,MAAK,SAAAN,GAAG,OAAIA,EAAIG,KAAOP,YAD/B,aACG,EAA4CW,cC7B7CC,G,MAAwB,CAC5B,CAAEL,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,iBAQpCE,E,4MACJC,MAAQ,CACNf,KAAMa,EACNZ,cAAeY,EAAe,GAAGL,I,EAGnCN,cAAgB,SAACG,GACf,EAAKW,SAAS,CACZf,cAAeI,EAAIG,M,EAIvBS,iBAAmB,WACjB,MAAgC,EAAKF,MAA7Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,cAERiB,EAAYlB,EAAKW,MAAK,SAAAN,GAAG,OAAIA,EAAIG,KAAOP,KAE9C,cAAOiB,QAAP,IAAOA,OAAP,EAAOA,EAAWR,O,4CAGpB,WACE,MAAgCS,KAAKJ,MAA7Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,cAEd,OACE,sBAAKE,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGgB,KAAKF,sBAER,cAAC,EAAD,CACEjB,KAAMA,EACNC,cAAeA,EACfC,cAAeiB,KAAKjB,uB,GAhCZkB,IAAMC,WAuCTP,ICpDfQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ddf7165.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.min.css';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => (\n  <>\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => (\n          <li key={tab.id}>\n            <button\n              type=\"button\"\n              className={classNames('button is-white', {\n                'is-dark': selectedTabId === tab.id,\n              })}\n              onClick={() => onTabSelected(tab)}\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n    <p className=\"subtitle\">\n      {tabs.find(tab => tab.id === selectedTabId)?.content}\n    </p>\n  </>\n);\n","import React from 'react';\nimport { Tabs } from './Tabs';\n\nimport './App.scss';\n\nconst tabsFromServer: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  tabs: Tab[],\n  selectedTabId: string,\n};\n\nclass App extends React.Component <{}, State> {\n  state = {\n    tabs: tabsFromServer,\n    selectedTabId: tabsFromServer[0].id,\n  };\n\n  onTabSelected = (tab: Tab) => {\n    this.setState({\n      selectedTabId: tab.id,\n    });\n  };\n\n  selectedTabTitle = () => {\n    const { tabs, selectedTabId } = this.state;\n\n    const selectTab = tabs.find(tab => tab.id === selectedTabId);\n\n    return selectTab?.title;\n  };\n\n  render() {\n    const { tabs, selectedTabId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          Selected tab is&nbsp;\n          {this.selectedTabTitle()}\n        </h1>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}